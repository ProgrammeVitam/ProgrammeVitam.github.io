.. _systemd_timers:

Liste des timers systemd
########################

.. note:: Dans les sections suivantes, les éléments de type ``<curator.log.metrics.close>`` correspondent à des variables de l'inventaire ansible utilisé. 


Timers de maintenance des index elasticsearch-log
=================================================

Ces timers gèrent la maintenance des index elasticsearch du cluster elasticsearch-log.

Ces timers sont activés sur tous les sites d'un déploiement multi-site.


vitam-curator-metrics-indexes
-----------------------------

Maintenance des indexes ``metrics-vitam-*`` (sur elasticsearch-log) (qui contiennent les métriques remontées par les composants VITAM) :

* Ferme les indexes de plus de ``<curator.log.metrics.close>`` jours ;
* Supprime les indexes de plus de ``<curator.log.metrics.delete>`` jours.

Units systemd :

* vitam-curator-metrics-indexes.service
* vitam-curator-metrics-indexes.timer

Exécution :

* Localisation : groupe ansible ``[hosts-elasticsearch-log]`` (sur toutes les instances du groupe)
* Périodicité : Lancé chaque jour à 00:30.


vitam-curator-close-old-indexes
-------------------------------

Fermeture des anciens indexes ``logstash-*`` (sur elasticsearch-log) de plus de ``<curator.log.logstash.close>`` jours (ces indexes contiennent les logs remontés par les composants et COTS VITAM).

Units systemd :

* vitam-curator-close-old-indexes.service
* vitam-curator-close-old-indexes.timer

Exécution :

* Localisation : groupe ansible ``[hosts-elasticsearch-log]`` (sur toutes les instances du groupe)
* Périodicité : Lancé chaque jour à 00:10.


vitam-curator-delete-old-indexes
--------------------------------

Suppression des indexes ``logstash-*`` (sur elasticsearch-log) de plus de ``<curator.log.logstash.delete>`` jours (ces indexes contiennent les logs remontés par les composants et COTS VITAM).

Units systemd :

* vitam-curator-delete-old-indexes.service
* vitam-curator-delete-old-indexes.timer

Exécution :

* Localisation : groupe ansible ``[hosts-elasticsearch-log]`` (sur toutes les instances du groupe)
* Périodicité : Lancé chaque jour à 00:20.


Timers de gestion des journaux (preuve systémique)
==================================================

Ces timers gèrent la sécurisation des journaux métier VITAM.

Ces timers sont activés uniquement sur le site primaire d'un déploiement multi-site.

.. _systemd_timer_storage_backup:

vitam-storage-log-backup
------------------------

Backup des journaux d'écriture de storage dans les offres de stockage.

Units systemd :

* vitam-storage-log-backup.service
* vitam-storage-log-backup.timer

Exécution :

* Localisation : groupe ansible ``[hosts-storage-engine]`` (sur toutes les instances du groupe)
* Périodicité : Lancé toutes les heures à 0 minutes 0 secondes (donc : 0h00, 1h00, ...)

.. _systemd_timer_storage_traceability:

vitam-storage-log-traceability
------------------------------

Sécurisation des journaux d'écriture de storage.

Units systemd :

* vitam-storage-log-traceability.service
* vitam-storage-log-traceability.timer

Exécution :

* Localisation : groupe ansible ``[hosts-storage-engine]`` (sur la dernière instance du groupe uniquement)
* Périodicité : Lancé toutes les heures à 10 minutes 0 secondes (donc : 0h10, 1h10, ...)

.. _systemd_timer_trc_ope:

vitam-traceability-operations
-----------------------------

Sécurisation du journal des opérations.

Units systemd :

* vitam-traceability-operations.service
* vitam-traceability-operations.timer

Exécution :

* Localisation : groupe ansible ``[hosts-logbook]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé à chaque changement d'heure.


.. _systemd_timer_lfc_unit:

vitam-traceability-lfc-unit
---------------------------

Sécurisation du journal du cycle de vie des unités archivistiques.

Units systemd :

* vitam-traceability-lfc-unit.service
* vitam-traceability-lfc-unit.timer

Exécution :

* Localisation : groupe ansible ``[hosts-logbook]]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé à chaque changement d'heure.

.. _systemd_timer_lfc_og:

vitam-traceability-lfc-objectgroup
----------------------------------

Sécurisation du journal du cycle de vie des groupes d'objets.

Units systemd :

* vitam-traceability-lfc-objectgroup.service
* vitam-traceability-lfc-objectgroup.timer

Exécution :

* Localisation : groupe ansible ``[hosts-logbook]]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé à chaque changement d'heure.


Timers d'audit interne VITAM
============================

Ces timers gèrent le déclenchement périodique des tâches d'audit interne VITAM.

Ces timers sont activés uniquement sur le site primaire d'un déploiement multi-site.


vitam-traceability-audit
------------------------

Contrôle de la validité de la sécurisation des journaux.

Units systemd :

* vitam-traceability-audit.service
* vitam-traceability-audit.timer

Exécution :

* Localisation : groupe ansible ``[hosts-logbook]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé chaque jour à 0:00.


vitam-rule-management-audit
---------------------------

Validation de la cohérence des règles de gestion entre les offres de stockage et les bases de données.

Units systemd :

* vitam-rule-management-audit.service
* vitam-rule-management-audit.timer

Exécution :

* Localisation : groupe ansible ``[hosts-functional-administration]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé à chaque changement d'heure.

Timer relatif aux liens symboliques de *accession register*
============================================================

vitam-create-accession-register-symbolic
-----------------------------------------

Déclenche une commande qui va calculer le registre des fonds symbolique et les ajoute dans les bases de données.

Units systemd :

* vitam-create-accession-register-symbolic.service (activé sur site primaire uniquement)
* vitam-create-accession-register-symbolic.timer (activé sur site primaire uniquement)

Exécution :

* Localisation : groupe ansible ``[hosts-functional-administration]`` (sur la dernière instance du groupe uniquement)
* Périodicité : chaque jour à minuit.

Timers de reconstruction VITAM
==============================

Ces timers gèrent la reconstruction des bases de données VITAM à partir des informations persistées dans les offres de stockage.

Ces timers sont activés uniquement sur le site secondaire d'un déploiement multi-site.


vitam-functional-administration-reconstruction
----------------------------------------------

Reconstruction des données portées par le composant functional-administration.

Units systemd :

* vitam-functional-administration-reconstruction.service
* vitam-functional-administration-reconstruction.timer
* vitam-functional-administration-accession-register-reconstruction.service (activé sur site secondaire seulement)
* vitam-functional-administration-accession-register-reconstruction.timer (activé sur site secondaire seulement)

Exécution :

* Localisation : groupe ansible ``[hosts-functional-administration]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé tous les cinq minutes.

.. _systemd_timer_reconst:

vitam-logbook-reconstruction
----------------------------

Reconstruction des données portées par le composant logbook.

Units systemd :

* vitam-logbook-reconstruction.service
* vitam-logbook-reconstruction.timer

Exécution :

* Localisation : groupe ansible ``[hosts-logbook]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé tous les 5 minutes.


.. _systemd_timer_mtd_recons:

vitam-metadata-reconstruction
-----------------------------

Reconstruction des données portées par le composant metadata.

Units systemd :

* vitam-metadata-reconstruction.timer
* vitam-metadata-reconstruction.service

Exécution :

* Localisation : groupe ansible ``[hosts-metadata]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé toutes les 5 minutes.

.. _systemd_timer_mtd_graph:

vitam-metadata-store-graph
-----------------------------

Log shipping des données graphes portées par le composant metadata.

Units systemd :

* vitam-metadata-store-graph.timer
* vitam-metadata-store-graph.service

Exécution :

* Localisation : groupe ansible ``[hosts-metadata]`` (sur la dernière instance du groupe uniquement)
* Périodicité : lancé toutes les 30 minutes.
