Interruption / maintenance
##########################


Procédure d'arrêt complet
==========================

Un *playbook* ansible d'arrêt complet de la solution logicielle :term:`VITAM` est fourni, sous ``deployment/ansible-vitam-exploitation``  (fichier de *playbook* ``stop_vitam.yml``), pour réaliser de façon automatisée les actions nécessaires.

.. warning:: Ce script, en l'état, permet un `EMERGENCY BREAK`, autrement dit un arrêt brutal des composants, ne permettant pas de garantir, à l'issue, une cohérence  des données. Il est donc fortement recommandé de positionner les traitements courants en pause avant de lancer la procédure d'arrêt.

.. note:: Une confirmation est demandée pour lancer ce script d'arrêt de la solution logicielle VITAM.

Un playbook ansible d'arrêt des `timers` systemD :term:`VITAM` est également fourni, sous ``deployment/ansible-vitam-exploitation``  (fichier de *playbook* ``stop_vitam_timers.yml``), pour réaliser de façon automatisée les actions nécessaires. Ce script est à lancer une fois l'arrêt des services correctement réalisé.



Procédure de démarrage complet
==============================

Les machines hébergeant la solution logicielle :term:`VITAM` doivent être allumées et en état de fonctionnement pour exécuter cette procédure.

Un *playbook* ansible de démarrage de la solution logicielle :term:`VITAM` est fourni, sous ``deployment/ansible-vitam-exploitation`` (fichier de *playbook* ``start_vitam.yml``), pour réaliser de façon automatisée les actions nécessaires.

Un playbook ansible de démarrage des `timers` systemD :term:`VITAM` est également fourni, sous ``deployment/ansible-vitam-exploitation``  (fichier de *playbook* ``start_vitam_timers.yml``), pour réaliser de façon automatisée les actions nécessaires. Ce script est à lancer une fois le démarrage des services correctement réalisé.

Procédure de statut
===================

Un playbook ansible est fourni, sous ``deployment/ansible-vitam-exploitation`` (fichier de *playbook* ``status_vitam.yml``), pour réaliser de façon automatisée les tests "autotest" intégrés dans la solution logicielle :term:`VITAM`.

Autres cas
==========

Procédure de maintenance / indisponibilité de VITAM
---------------------------------------------------

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_external.yml``, permettant d'arrêter sélectivement les composants :term:`VITAM` **ingest-external** et **access-external**
- fichier de *playbook* ``start_external.yml``, permettant de démarrer sélectivement :term:`VITAM` **ingest-external** et **access-external**

Ces scripts permettent d'empêcher l'usage de la solution logicielle :term:`VITAM` par les services versants, tout en laissant opérationnel le reste de la solution logicielle. Ces `playbooks` peuvent être utiles, voire nécessaires, dans le cadre d'une migration de données ou de maintenance de la solution logicielle :term:`VITAM`.

Ils ne stoppent donc pas:

- Les versements qui sont encore en cours de traitement (il est toutefois possible de les mettre en pause via ihm-demo par exemple)
- Les timers qui lancent divers traitements comme des sécurisations, pour cela, se référer au chapitre suivant


Procédure de maintenance liée aux `timers systemD`
--------------------------------------------------

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_timers.yml``, permettant d'arrêter sélectivement les `timers systemD`
- fichier de *playbook* ``start_vitam_timers.yml``, permettant de démarrer sélectivement les `timers systemD`

Procédure de maintenance sur les composants d'administration
-------------------------------------------------------------

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_admin.yml``, permettant d'arrêter sélectivement les composants Consul, la chaine de log (logstash / cluster elasticsearch log / kibana-log), cerebro et les docker mongo-express et elasticsearch-head
- fichier de *playbook* ``start_vitam_admin.yml``, permettant de démarrer sélectivement les composants Consul, la chaine de log (logstash / cluster elasticsearch log / kibana-log), cerebro et les docker mongo-express et elasticsearch-head

.. warning:: En passant le *playbook* d'arrêt, l'ensemble de la solution logicielle :term:`VITAM` devient inutilisable.

Procédure de maintenance des `IHM`
----------------------------------

Deux `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``stop_vitam_ihm.yml``, permettant d'arrêter sélectivement les composants :term:`VITAM` :term:`IHM` ihm-demo et ihm-recette
- fichier de *playbook* ``start_vitam_ihm.yml``, permettant de démarrer sélectivement les composants :term:`VITAM` :term:`IHM` ihm-demo et ihm-recette

Procédure de maintenance des `Bases de données métier`
-------------------------------------------------------

Quatre `playbooks` sont fournis dans ``deployment/ansible-vitam-exploitation`` :

- fichier de *playbook* ``start_elasticsearch_data.yml``, permettant de démarrer la totalité des elasticsearch-data
- fichier de *playbook* ``start_mongodb.yml``, permettant de démarrer les composants mongodb
- fichier de *playbook* ``stop_elasticsearch_data.yml``, permettant d'arrêter la totalité des composants elasticsearch-data
- fichier de *playbook* ``stop_mongodb.yml``, permettant d'arrêter les composants mongodb
