Mongodb
#######

Base de données dédiée aux données métier.


Type :
	COTS

Données stockées :
	* Données d'archives
	* Journaux métier
	* Référentiels métier

Typologie de consommation de resources :
	* CPU : moyenne
	* Mémoire : forte
	* Réseau : forte
	* Disque : forte


Architecture de déploiement
===========================

Architecture 1 noeud
--------------------

L'architecture à 1 noeud est uniquement constituée d'un noeud mongod ; elle n'est pas supportée par VITAM.

Architecture distribuée
-----------------------

Une architecture MongoDB distribuée utilise les notions suivantes :

* Sharding
    - Mongodb utilise le sharding pour scaler la base de données (scalabilité horizontale)
    - Le sharding distribue les données à travers les n partitions physiques (shards) dont le cluster est composé
    - Bien choisir la clé de sharding est primordial pour une répartition égale des documents insérés dans les différents shards
    - Chaque shard est composé d'un Replica Set

* Replica Set (RS)
    - Les replica sets assurent la haute disponibilité de Mongodb
    - Un replica set est (règles Mongodb de production) composé de ``2 x n + 1`` noeuds, avec ``n >= 1`` (1 noeud primaire, les autres étant des noeuds secondaires) ; le noeud primaire est choisi de manière arbitraire par MongoDB dans la liste des noeuds du replica set.
    - L'écriture se fait obligatoirement sur le noeud primaire

* Replica Set de config
    - Un Replica Set est dédié pour le stockage de la configuration du cluster
    - Comme tous les autres Replica Sets, il est recommandé de le peupler de ``2 x n + 1`` noeuds, avec ``n >= 1``.

* Routeur de requêtes
    - Le routeur mongos permet de rediriger une requête sur le ou les shards requis, en fonction de la clé de sharding ; il agit comme coordinateur de requête.

Une architecture MongoDB distribuée comprend 3 types de noeuds différents :

* mongod : stockent les données des Replica Sets métier ;
* mongos : routent les requêtes ;
* mongoc : stockent les données d'état et de configuration du cluster (ces noeuds utilisent en fait un moteur mongod, mais pour un Replica Set particulier : le Replica Set de configuration).

.. figure:: images/mongo-cluster.*
    :align: center

    Déploiement d'un cluster Mongo DB avec sharding.

L'architecture proposée dans le cadre de VITAM consiste à séparer les noeuds liés au routage des requêtes et de gestion du cluster d'une part (donc de colocaliser mongos et mongoc), avec les noeuds de stockage des données (mongod) d'autre part.

Ainsi, avec n shards et r noeuds par Replica Set (cluster), on obtient le déploiement suivant :

* au moins 3 serveurs config / service, chacun hébergeant:

    - 1 noeud mongos (service)
    - 1 noeud mongoc (Replica Set de configuration)

* n x r serveurs, chacun hébergeant:

    - 1 noeud mongod

.. note:: Dans le cadre de cette version du système VITAM, seul un shard sera configuré, mais de telle manière à pouvoir instancier d'autres shards sans modification conséquente du déploiement et de la configuration.

Ports utilisés
--------------

Les ports utilisés par mongodb sont les suivants:

* ``tcp:27017`` : Port de communication pour les noeuds mongos
* ``tcp:27018`` : Port d'écoute des noeuds du Replica Set de config (mongoc)
* ``tcp:27019`` : Port d'écoute des noeuds du Replica Set de données (mongod)

.. Monitoring
.. ==========
..


Backup
======

.. warning:: La procédure de backup d'une base MongoDB shardée est complexe, et est uniquement conseillée dans le cadre de déploiements de petite taille. Les principes en sont présentés ci-dessous, mais il est indispensable de se référer à la documentation officielle MongoDB pour en avoir les détails.


La procédure recommandée pour sauvegarder un point temporel d'une base de donnée répartie est complexe et nécessite de nombreux points de synchronisation. Dans le cadre de la sauvegarde à froid, il est préférable de sauvegarder les données directement depuis le serveur principal d'un lot de réplication.

En outre, la méthode de sauvegarde à utiliser doit être adaptée à la volumétrie des bases de données.

Dans les grandes lignes, il faut:

#. Arrêter les services d'entrée **mongos**.
#. Arrêter les services de données **mongod**.
#. Arrêter les services de configuration **mongoc**.
#. Sauvegarder les bases de données **mongod et mongoc**
#. Relancer les services **mongod**
#. Relancer les service **mongoc**
#. Relancer les services d'entrée **mongos**

.. figure:: images/export_mongodb.*
    :align: center

    Vue d'ensemble du processus d'export MongoDB pour base répartie
